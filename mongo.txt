//Create a collection named orders.
  db.createCollection('orders')
//Insert at least 3 documents that represent an order. IMPORTANT: See section below for fields.
  db.orders.insert({
    orderDate : Date(),
    orderTotal : 100.00,
  ..lineItems : [
  ... ... {unitPrice: 3.00, quantity: 10, productName: 'chocolate'}
  ... ... ]
  ... })
  db.orders.insert({
    orderDate : Date(),
    orderTotal : 90.00,
  ..lineItems : [
  ... ... {unitPrice: 4.00, quantity: 13, productName: 'coffee'}
  ... ... ]
  ... })
  db.orders.insert({ orderDate : Date(), orderTotal : 75.00,
  ... ... lineItems : [
  ... ... {unitPrice: 5.00, quantity: 23, productName: 'chips'}
  ... ... ]
  ... })
//Find a single order document, any order document.
  db.orders.find({ orderTotal : 75.00})
//Find all orders and make them look pretty.
  db.orders.find().pretty()
//Find all orders with an orderDate that is prior to 1/1/2016.
  db.orders.find({ orderDate : {$lt: "2016-01-01" }}).pretty()
//Find all orders with an orderDate that is after 1/1/2016.
  db.orders.find({ orderDate : {$gte: "2016-01-01" }}).pretty()
//Find orders with lineItems that have a quantity that is less than 50, but greater than 5. HINT: Look at $and and dot notation.
  db.orders.find({$and : [{"lineItems.quantity": {$lt: 50}}, {"lineItems.quantity": {$gt: 5}}]}).pretty()
//Update one of your line items to 42.99. HINT: Look at dot notation
  db.orders.update({_id: ObjectId("589a1e99692f8f268229442b")},{$set: { "lineItems.0.unitPrice" : 42.99}})
//Remove one of your orders.
  db.orders.remove({ _id: ObjectId("589a1e99692f8f268229442b")})
